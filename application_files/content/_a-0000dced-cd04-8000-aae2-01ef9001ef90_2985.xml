<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <rule>
        <name>validateEmail</name>
        <uuid>_a-0000dced-cd04-8000-aae2-01ef9001ef90_2985</uuid>
        <description></description>
        <parentUuid>127419f9-8ad4-49d2-af4d-88109f328731</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>= if(
  isnull(
    ri!email
  ),
  false,
  if(
    len(
      ri!email
    ) &lt; 3,
    false,
    if (find(&quot;@&quot;, ri!email) = 0,
    false,
    true
    )
  )
)</definition>
        <namedTypedValue>
            <name>email</name>
            <type>
                <name>string</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
            <value/>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role allowForAll="false" inherit="true" name="readers">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="authors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="true" name="administrators">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role allowForAll="false" inherit="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name>Empty</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string"/>
                    <a:nameRef>email</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions>
                    <a:expectedOutput>
                        <a:type a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:runtimeType a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:boolean">false</a:value>
                    </a:expectedOutput>
                </a:assertions>
            </el>
            <el>
                <a:name>Less than 3 characters</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string">ab</a:value>
                    <a:nameRef>email</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions>
                    <a:expectedOutput>
                        <a:type a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:runtimeType a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:boolean">false</a:value>
                    </a:expectedOutput>
                </a:assertions>
            </el>
            <el>
                <a:name>Valid email</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string">sylvain.furt@appian.com</a:value>
                    <a:nameRef>email</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions>
                    <a:expectedOutput>
                        <a:type a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:runtimeType a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:boolean">true</a:value>
                    </a:expectedOutput>
                </a:assertions>
            </el>
            <el>
                <a:name>No @ character</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:string">sylvain.furtappian.com</a:value>
                    <a:nameRef>email</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions>
                    <a:expectedOutput>
                        <a:type a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:runtimeType a:uuid="{http://www.appian.com/ae/types/2009}Boolean"/>
                        <a:value xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xsd:boolean">false</a:value>
                    </a:expectedOutput>
                </a:assertions>
            </el>
        </value>
    </typedValue>
</contentHaul>
